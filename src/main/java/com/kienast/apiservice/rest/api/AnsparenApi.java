/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.kienast.apiservice.rest.api;

import com.kienast.apiservice.rest.api.model.AnsparEntryModel;
import com.kienast.apiservice.rest.api.model.CategoryResponseModel;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Validated
@Api(value = "ansparen", description = "the ansparen API")
public interface AnsparenApi {

    @ApiOperation(value = "add an entry", nickname = "addEntry", notes = "", response = AnsparEntryModel.class, tags={ "ansparen", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Schemas", response = AnsparEntryModel.class),
        @ApiResponse(code = 400, message = "Bad Request") })
    @RequestMapping(value = "/ansparen",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AnsparEntryModel> addEntry(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AnsparEntryModel ansparEntryModel);


    @ApiOperation(value = "get Categories", nickname = "getCategories", notes = "", response = CategoryResponseModel.class, responseContainer = "List", tags={ "ansparen", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Schemas", response = CategoryResponseModel.class, responseContainer = "List") })
    @RequestMapping(value = "/ansparen",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<CategoryResponseModel>> getCategories();


    @ApiOperation(value = "get Category", nickname = "getCategory", notes = "", response = CategoryResponseModel.class, tags={ "ansparen", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Schemas", response = CategoryResponseModel.class) })
    @RequestMapping(value = "/ansparen/{description}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CategoryResponseModel> getCategory(@ApiParam(value = "the description of a category",required=true) @PathVariable("description") String description);

}
